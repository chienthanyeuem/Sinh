#include<iostream>
#include<set>
#include<map>
#include<unordered_map>
#include<unordered_set>
#include<array>
#include<string>
#include<fstream>
#include<sstream>
#include<cstring>
#include<algorithm>
#include<climits>
#include<cmath>
#include<numeric>
#include<vector>
#include<stack>
#include<cstddef>
#include<utility>
#include<queue>
#include<deque>
#include<iomanip>
#include<random>
#include<cstdbool>
using namespace std;

#define ll long long
#define ull unsigned long long
#define l long
#define fl float
#define fi first
#define se second
#define pb push_back
#define PB pop_back()
#define pf push_front
#define PF pop_front()
#define ins insert
#define FOR(i,r,n) for(int i=r ; i<n; ++i)
#define FORen(i,r,n) for(int i=r ; i<=n; ++i)
#define FORn(i,r,n) for(int i=n-1; i>=r; --i)

inline ll gcd(ll a, ll b) { if (b == 0) return a; else return gcd(b, a % b); }
inline ll lcm(ll a, ll b) { return b / gcd(a, b) * a; }
inline ll max(ll a, ll b) { ll max; return max = a > b ? a : b; }
inline ll min(ll a, ll b) { ll min; return min = a < b ? a : b; }

#define mod = 1000000007;
#define inf = 1000002804;
const int di1[8] = { -1,-1,-1,0,0,1,1,1 };
const int dj1[8] = { -1,0,1,-1,1,-1,0,1 };
const int di2[4] = { -1,0,1,0 };
const int dj2[4] = { 0,-1,0,1 };


void solve() {
	//k chiec den lien tiep hoat dong 
	//b chiec den bi hong 
	//n chiec den
	int n, k, b; cin >> n >> k >> b;
	int a[100001] = { 0 };
	FOR(i, 0, b) {
		//b so den bi hong
		int x; cin >> x;
		a[x] = 1;
	}
	int cnt = 0;
	for (int i = 1; i <= k; ++i) {
		if (a[i] == 1) ++cnt;
	}
	int ans = cnt;
	for (int i = k + 1; i <= n; ++i) {
		if (a[i - k] == 1) --cnt;
		if (a[i] == 1) ++cnt;
		ans = min(cnt, ans);
	}
	cout << ans;

}

int main() {
	int tc; cin >> tc;
	while (tc--) {
		solve();
		cout << endl;
	}
}
